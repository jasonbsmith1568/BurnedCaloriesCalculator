<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;scanner&apos; from expression &apos;new Scanner(new File(&quot;studentrecords.txt&quot;))&apos;&#x0D;&#x0A;- Original project: &apos;MVC&apos;&#x0D;&#x0A;- Variable name: &apos;scanner&apos;&#x0D;&#x0A;- Destination method: &apos;StudentController.setArray()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Scanner(new File(&quot;studentrecords.txt&quot;))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;scanner&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{StudentController.java" name="scanner" replace="true" selection="570 43" stamp="1423621764107" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;MVC&apos;&#x0D;&#x0A;- Original project: &apos;MVC&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     StudentController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;{StudentController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1423628406413" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;MVC&apos;&#x0D;&#x0A;- Original project: &apos;MVC&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     StudentController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;{StudentController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1423628431424" version="1.0"/>
</session>